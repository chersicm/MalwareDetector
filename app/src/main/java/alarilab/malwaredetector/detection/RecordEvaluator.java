package alarilab.malwaredetector.detection;

import android.util.Log;

import alarilab.malwaredetector.shared.StatisticsData;
import java.lang.Math;

/**
 * Created by Michele on 12/05/16.
 */
public class RecordEvaluator {

    private final double intercept = 4.4309;
    private final double[] weights = new double[StatisticsData.RECORD_SIZE];

    public RecordEvaluator() {
        weights[StatisticsData.jarmmapPSS] = 0.5386;
        weights[StatisticsData.ttfmmapPSS] = 0.0046;
        weights[StatisticsData.dexmmapPSS] = -0.0069;
        weights[StatisticsData.dexmmapPrivateDirty] = 0.0137;
        weights[StatisticsData.OthermmapPrivateDirty] = -0.0646;
        weights[StatisticsData.CPUtotal] = -0.0456;
    }

    // record level algorithm: decide whether a record is likely to be malware (1) or not (0)
    public int evaluate(Number[] record, int pid) {
        if (weights.length != StatisticsData.RECORD_SIZE) {
            System.err.println("error: record and weights should have equal length\n");
            return -1;
        }
        // weighted sum of features
        double F = intercept;
        for (int i = 0; i < StatisticsData.RECORD_SIZE; i++) {
            F += weights[i] * record[i].doubleValue();
        }
        // probability that the record be malware
        double P = Math.exp(F) / (Math.exp(F) + 1);
//        printProbability(p, pid);

        if (P > 0.5)
            return 0; // malware
        return 1; // trusted
    }

    private void printProbability(double P, int pid) {
        Log.d("[pid=" + pid + "] P", "" + P);
    }
}
